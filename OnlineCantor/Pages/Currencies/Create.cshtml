@page
@model OnlineCantor.Pages.Currencies.CreateModel
@{
}

<br />
<h2 class="text-info">Create New Currency</h2>
<div class="border container" style="padding:30px">
    <form method="post">
        <div class="text-danger" asp-validation-summary="ModelOnly"></div>
        <div class="form-group row">
            <div class="col-3">
                <label asp-for="Currency.Name"></label>
            </div>
            <div class="col-6">
                <input asp-for="Currency.Name" class="form-control" />
            </div>
            <span asp-validation-for="Currency.Name" class="text-danger"></span>
        </div>
        <div class="form-group row">
            <div class="col-3">
                <label asp-for="Currency.ShortName"></label>
            </div>
            <div class="col-6">
                <input asp-for="Currency.ShortName" class="form-control" />
            </div>
            <span asp-validation-for="Currency.ShortName" class="text-danger"></span>
        </div>
        <div class="form-group row">
            <div class="col-3">
                <label asp-for="Currency.Value"></label>
            </div>
            <div class="col-6">
                <input asp-for="Currency.Value" class="form-control" />
            </div>
            <span asp-validation-for="Currency.Value" class="text-danger"></span>
        </div>
        <div class="form-group row">
            <div class="col-3 offset-3">
                <input type="submit" value="Create" class="btn btn-primary form-control" />
            </div>
            <div class="col-3">
                <a asp-page="CurrencyList" class="btn btn-success form-control">Back to List</a>
            </div>
        </div>
    </form>
</div>

@section Scripts{
    <partial name="_ValidationScriptsPartial" />
    <script>
    $.validator.methods.range = function (value, element, param) {
            var globalizedValue = value.replace(",", ".");
            return this.optional(element) || (globalizedValue >= param[0] && globalizedValue <= param[1]);
        }

        $.validator.methods.number = function (value, element) {
            return this.optional(element) || /-?(?:\d+|\d{1,3}(?:[\s\.,]\d{3})+)(?:[\.,]\d+)?$/.test(value);
        }
    </script>
}